#!/bin/bash

## User specific environment
## set PATH so it includes user's private bin directories 
if [[ -d "$HOME/bin" ]]; then
  PATH="$HOME/bin:$PATH"
fi
if [[ -d "$HOME/.local" ]]; then
  PATH="$HOME/.local/bin:$PATH"
fi
PATH="$PATH:/var/lib/snapd/snap/bin"

## TITLE: xdg-utils
XDG_CONFIG_HOME="$HOME/.config"

## TITLE: Perl modules with CPAN
PATH="${HOME}/perl5/bin${PATH:+:${PATH}}"; 
PERL5LIB="${HOME}/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; 
export PERL5LIB;
PERL_LOCAL_LIB_ROOT="${HOME}/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}";
export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/$(whoami)/perl5\""; 
export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/$(whoami)/perl5";
export PERL_MM_OPT;

## TITLE: nvm (Node Version Manager) 
## LINK: https://github.com/creationix/nvm
## DESC: Node env setup.
## - Installation:
## curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash

#if [[ $(command -v nvm) ]]; then
#  export NVM_DIR;
#  NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
#  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
#  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
#fi

## TITLE: fvm Node Version Manager (nvm alternative)
## LINK: https://github.com/Schniz/fnm
## - Installation - update:
## curl -fsSL https://github.com/Schniz/fnm/raw/master/.ci/install.sh | bash -s -- --install-dir "./.fnm" --skip-shell

if [[ -d "/home/$(whoami)/.fnm" ]]; then
  PATH=$HOME/.fnm:$PATH
  eval "$(fnm env)"
fi

## TITLE: Yarn (set path after nvm)
if command -v yarn >/dev/null 2>&1; then
  PATH="$PATH:$(yarn global bin)"
  # PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
fi


## TITLE: Deno
## LINK: https://deno.land/#installation
if [[ -d "/home/$(whoami)/.deno" ]]; then
  export DENO_INSTALL;
  DENO_INSTALL="/home/$(whoami)/.deno"
  PATH="$DENO_INSTALL/bin:$PATH"
fi

## TITLE: Php artisan and composer
#if [[ $(command -v composer) ]]; then
# PATH=$HOME/.config/composer/vendor/bin:$PATH
#fi

## TITLE: Erlang and elixir
# PATH=$HOME/usr/local/bin/elixir:$PATH
# export ERL_AFLAGS="-kernel shell_history enabled"

## TITLE: Golang, GVM (go version manager) and packages
## gvm: go version manager
## Install:
## bash < <(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)
## Note: gvm will overwite $GOPATH to .gvm/pkgsets/<go version>/global 
## and $GOROOT to ${GVM_ROOT}/.gvm/gos/<go version>
[[ -s "/home/seven/.gvm/scripts/gvm" ]] && source "/home/seven/.gvm/scripts/gvm"

# export GOROOT="/usr/local/go/" # sudo mv go /usr/local
export GOPATH=$HOME/.go # defaults to GOROOT 
export GOBIN=$GOPATH/bin
export GOARCH=amd64
export GOOS=linux
PATH=$PATH:$GOBIN # expose go binaries system wide.

## https://github.com/tomnomnom/gf 
## go get -u github.com/tomnomnom/gf
if [[ $(command -v gf) ]]; then
  source "${GOPATH}/src/github.com/tomnomnom/gf/gf-completion.bash"
fi

## TITLE: Rust and rustup
## Install rustup: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
if [[ $(command -v cargo ) ]]; then
  PATH="$HOME/.cargo/bin:$PATH"
fi

## TITLE: fzf and skim
# PATH="$HOME/.skim/bin:$PATH"
## --files: List files that would be searched but do not search
## --no-ignore: Do not respect .gitignore, etc...
## --hidden: Search hidden files and folders
## --follow: Follow symlinks
## --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'

## TITLE: Custom Path to IntelliJ-IDEA
# PATH=$HOME/opt/Intellij/idea-UI-172.4155.36/bin:$PATH

## TITLE: VSCode and VSCodium
## Link: https://github.com/VSCodium/vscodium/blob/master/DOCS.md#extensions-marketplace
VSCODE_GALLERY_SERVICE_URL='https://marketplace.visualstudio.com/_apis/public/gallery'
VSCODE_GALLERY_CACHE_URL='https://vscode.blob.core.windows.net/gallery/index'
VSCODE_GALLERY_ITEM_URL='https://marketplace.visualstudio.com/items'
VSCODE_GALLERY_CONTROL_URL=''
VSCODE_GALLERY_RECOMMENDATIONS_URL=''


export PATH

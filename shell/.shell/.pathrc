#!/bin/bash

## User specific environment
## set PATH so it includes user's private bin directories 
PATH="$HOME/bin:$HOME/.local/bin:$PATH"
PATH="$PATH:/var/lib/snapd/snap/bin"

## TITLE: nvm (Node Version Manager) 
## LINK: https://github.com/creationix/nvm
## DESC: Node env setup.
## - Installation:
## curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash
if ! command -v nvm &> /dev/null; then
  export NVM_DIR;
  NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

## TITLE: fvm Node Version Manager (nvm alternative)
## LINK: https://github.com/Schniz/fnm
## - Installation - update:
## curl -fsSL https://github.com/Schniz/fnm/raw/master/.ci/install.sh | bash -s -- --install-dir "./.fnm" --skip-shell
if ! command -v fnm &> /dev/null; then
  export PATH=$HOME/.fnm:$PATH
  eval "$(fnm env)"
fi

## TITLE: Yarn (set path after nvm)
if ! command -v yarn &> /dev/null; then
  PATH="$PATH:$(yarn global bin)"
  # PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
fi

## TITLE: Php artisan and composer
#if [[ $(command -v composer) ]]; then
# PATH=$HOME/.config/composer/vendor/bin:$PATH
#fi

## TITLE: Erlang and elixir
# PATH=$HOME/usr/local/bin/elixir:$PATH
# export ERL_AFLAGS="-kernel shell_history enabled"

## TITLE: Golang, go version manager and packages
## gvm: go version manager
## Note: gvm will overwite $GOPATH to .gvm/pkgsets/<go version>/global 
## and $GOROOT to ${GVM_ROOT}/.gvm/gos/<go version>
if [ -d "/home/$(whoami)/.gvm" ]; then
  [[ -s "/home/$(whoami)/.gvm/scripts/gvm" ]] && source "/home/$(whoami)/.gvm/scripts/gvm"
fi
# export GOROOT="/usr/local/go/" # sudo mv go /usr/local
if ! command -v go &> /dev/null; then
  export GOPATH=$HOME/.go # defaults to GOROOT 
  export GOBIN=$GOPATH/bin
  export GOARCH=amd64
  export GOOS=linux
  PATH="$GOBIN:$PATH" # expose go binaries system wide.
fi

## TITLE: Rust and rustup
## Install rustup: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
PATH="$HOME/.cargo/bin:$PATH"

## TITLE: fzf and skim
# PATH="$HOME/.skim/bin:$PATH"
## --files: List files that would be searched but do not search
## --no-ignore: Do not respect .gitignore, etc...
## --hidden: Search hidden files and folders
## --follow: Follow symlinks
## --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'

## TITLE: Custom Path to IntelliJ-IDEA
# PATH=$HOME/opt/Intellij/idea-UI-172.4155.36/bin:$PATH

export PATH
